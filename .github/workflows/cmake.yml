name: Build Test 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install curl and 7-Zip
        run: |
          choco install curl
          choco install 7zip
          
      - name: Install CMake
        run: |
          curl -L -O https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-windows-x86_64.zip
          7z x cmake-3.21.3-windows-x86_64.zip -oc:\cmake
          echo "##vso[task.prependpath]c:\cmake\bin"

      - name: Install MinGW Tools 
        run: |
          curl -L -O https://github.com/brechtsanders/winlibs_mingw/releases/download/13.0.1-snapshot20230402-11.0.0-ucrt-r1/winlibs-x86_64-mcf-seh-gcc-13.0.1-snapshot20230402-mingw-w64ucrt-11.0.0-r1.zip 
          7z x winlibs-x86_64-mcf-seh-gcc-13.0.1-snapshot20230402-mingw-w64ucrt-11.0.0-r1.zip -oc:\mingw
          echo "##vso[task.prependpath]c:\mingw\mingw64\bin"

      - name: Install OpenCV dependencies
        run: |
          curl -L -O https://github.com/opencv/opencv/archive/refs/tags/4.5.5.zip
          7z x 4.5.5.zip -oC:\opencv
          cd C:\opencv\opencv-4.5.5\
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=OFF -DENABLE_PYTHON=OFF -DBUILD_EXAMPLES=OFF ..
          cmake --build . --config Release

      - name: Configure CMake
        run: |
          cd $GITHUB_WORKSPACE
          mkdir build
          cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DOpenCV_DIR=C:\opencv\opencv-4.5.5\build -B build

      - name: Build ChipImageAlgr
        run: |
          cd $GITHUB_WORKSPACE
          cmake --build build --config Release

      - name: Packaging ChipImageAlgr
        run: |
          cd $GITHUB_WORKSPACE
          ls -l .
          ls -l C:\opencv\opencv-4.5.5\build\bin\*.dll
          ls -l C:\opencv\opencv-4.5.5\build\x64\vc16\bin\*dll
          tar -zcvf image_process.tar.gz bin/ C:\opencv\opencv-4.5.5\build\bin\*.dll C:\opencv\opencv-4.5.5\build\x64\vc16\bin\*dll
          ls -l .

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image_process
          path: $GITHUB_WORKSPACE/image_process.tar.gz
